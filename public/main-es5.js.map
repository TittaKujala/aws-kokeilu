{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/addperson/addperson.component.ts","webpack:///src/app/addperson/addperson.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/editperson/editperson.component.ts","webpack:///src/app/editperson/editperson.component.html","webpack:///src/app/not-yet/not-yet.component.ts","webpack:///src/app/not-yet/not-yet.component.html","webpack:///src/app/peoplelist/peoplelist.component.ts","webpack:///src/app/peoplelist/peoplelist.component.html","webpack:///src/app/person.ts","webpack:///src/app/server.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AddpersonComponent","serverService","router","name","email","np","addPerson","subscribe","navigateByUrl","selector","templateUrl","styleUrls","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","AppModule","declarations","providers","bootstrap","EditpersonComponent","activatedRoute","ss","params","personid","getOnePerson","person","updatePerson","NotYetComponent","PeoplelistComponent","update","selectedPerson","getPersonRest","data","peoplelist","error","errorMessage","p","deletePerson","Person","apiUrl","ServerService","http","get","newperson","post","HttpOptions","delete","put","providedIn","headers","environment","production","bootstrapModule","catch","err","console"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,sE,CAIA;;;QAOaC,kB;;;AAEX,kCAAoBC,aAApB,EAAyDC,MAAzD,EAAwE;AAAA;;AAApD,aAAAD,aAAA,GAAAA,aAAA;AAAqC,aAAAC,MAAA,GAAAA,MAAA;AAAkB;;;;kCAC/DC,I,EAAaC,K,EAAc;AAAA;;AACnC,cAAIC,EAAE,GAAG,IAAI,8CAAJ,CAAWF,IAAX,EAAiBC,KAAjB,CAAT;AACA,eAAKH,aAAL,CAAmBK,SAAnB,CAA6BD,EAA7B,EAAiCE,SAAjC,CAA2C,YAAM;AACjD;AACE;AACA,iBAAI,CAACL,MAAL,CAAYM,aAAZ,CAA0B,SAA1B;AACD,WAJD;AAKD;;;mCAEK,CACP;;;;;;;uBAbUR,kB,EAAkB,8H,EAAA,uH;AAAA,K;;;YAAlBA,kB;AAAkB,oC;AAAA,e;AAAA,a;AAAA,2E;AAAA;AAAA;;;ACX/B;;AAAI;;AAAa;;AACjB;;AACA;;AACI;;AAAO;;AAAI;;AAAI;;AAAK;;AAAI;;AAAO;;AAAK;;AACpC;;AAAI;;AAAI;;AAAc;;AAAK;;AAAI;;AAAe;;AAAK;;AACnD;;AAAI;;AAAgB;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA,mBAAS,IAAAM,SAAA,sBAAT;AAA2C,WAA3C;;AAA6C;;AAAK;;AAAS;;AAAK;;AAChG;;;;;;;;sEDKaN,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTS,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEX/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAOA,QAAMC,MAAM,GAAW,CAAC;AACtBC,UAAI,EAAE,EADgB;AAEtBC,gBAAU,EAAE,SAFU;AAGtBC,eAAS,EAAE;AAHW,KAAD,EAKtB;AACCF,UAAI,EAAE,QADP;AAECG,eAAS,EAAE;AAFZ,KALsB,EAStB;AACCH,UAAI,EAAE,MADP;AAECG,eAAS,EAAE;AAFZ,KATsB,EAatB;AACCH,UAAI,EAAE,UADP;AAECG,eAAS,EAAE;AAFZ,KAbsB,EAiBtB;AACCH,UAAI,EAAE,IADP;AAECG,eAAS,EAAE;AAFZ,KAjBsB,CAAvB;;QA2BaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBN,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBK,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBN,MAArB,CAAD,CADD;AAERd,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;AClC7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOasB,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,mBAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA,wI;AAAA;AAAA;ACPzB;;AAAI;;AAAa;;AAEjB;;AAAuD;;AAAQ;;AAAQ;;AAAS;;AAChF;;AAAqD;;AAAQ;;AAAM;;AAAS;;AAE5E;;;;;;;;;sEDEaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTX,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA+BaW,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,CAAC,6DAAD,C;AAAe,gBANjB,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,EAIP,0DAJO,CAMiB;;;;0HAGfA,S,EAAS;AAAA,uBAflB,2DAekB,EAdlB,oFAckB,EAblB,0EAakB,EAZlB,iFAYkB,EAXlB,qFAWkB;AAXC,kBAGnB,uEAHmB,EAInB,oEAJmB,EAKnB,qEALmB,EAMnB,0DANmB;AAWD,O;AALP,K;;;;;sEAKFA,S,EAAS;cAjBrB,sDAiBqB;eAjBZ;AACRC,sBAAY,EAAE,CACZ,2DADY,EAEZ,oFAFY,EAGZ,0EAHY,EAIZ,iFAJY,EAKZ,qFALY,CADN;AAQRJ,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,qEAHO,EAIP,0DAJO,CARD;AAcRK,mBAAS,EAAE,CAAC,6DAAD,CAdH;AAeRC,mBAAS,EAAE,CAAC,2DAAD;AAfH,S;AAiBY,Q;;;;;;;;;;;;;;;;;;AC/BtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACIA;;AACI;;AACI;;AACI;;AAAI;;AAAI;;AAAK;;AAAI;;AAAO;;AAC5B;;AACA;;AAAI;;AAAI;;AAAsC;AAAA;;AAAA;;AAAA;AAAA;;AAAwB;;AAAlE;;AACA;;AAAI;;AAAyC;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAAtE;;AACJ;;AACA;;AACI;;AAAgB;;AAAQ;AAAA;;AAAA;;AAAA;AAAA;;AAAiB;;AAAe;;AAAS;;AACrE;;AACJ;;AACJ;;;;;;AAPsD;;AAAA;;AACG;;AAAA;;;;QDA5CC,mB;;;AAGX,mCAAoBxB,MAApB,EAA4CyB,cAA5C,EACUC,EADV,EAC6B;AAAA;;AADT,aAAA1B,MAAA,GAAAA,MAAA;AAAwB,aAAAyB,cAAA,GAAAA,cAAA;AAClC,aAAAC,EAAA,GAAAA,EAAA;AAAsB;;;;mCAExB;AAAA;;AACN,eAAKD,cAAL,CAAoBE,MAApB,CAA2BtB,SAA3B,CAAqC,UAAAsB,MAAM,EAAI;AAC7C,kBAAI,CAACC,QAAL,GAAgBD,MAAM,CAAC,IAAD,CAAtB;;AACA,kBAAI,CAACD,EAAL,CAAQG,YAAR,CAAqB,MAAI,CAACD,QAA1B,EAAoCvB,SAApC,CAA8C,UAACyB,MAAD,EAAoB;AAChE,oBAAI,CAACA,MAAL,GAAcA,MAAd;AACD,aAFD;AAGD,WALD;AAMD;;;iCAEK;AAAA;;AACJ,eAAKJ,EAAL,CAAQK,YAAR,CAAqB,KAAKD,MAA1B,EAAkCzB,SAAlC,CAA4C,UAAAyB,MAAM,EAAE;AAClD,kBAAI,CAAC9B,MAAL,CAAYM,aAAZ,CAA0B,GAA1B;AACD,WAFD;AAGD;;;;;;;uBAnBUkB,mB,EAAmB,uH,EAAA,+H,EAAA,8H;AAAA,K;;;YAAnBA,mB;AAAmB,qC;AAAA,c;AAAA,a;AAAA,8M;AAAA;AAAA;ACThC;;AAAI;;AAAwB;;AAC5B;;AAAG;;AAAyB;;AAC5B;;AACA;;;;AAFG;;AAAA;;AAEE;;AAAA;;;;;;;;;sEDMQA,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTjB,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEVhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOauB,e;;;AAEX,iCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,e;AAAe,K;;;YAAfA,e;AAAe,kC;AAAA,c;AAAA,a;AAAA;AAAA;ACP5B;;AAAG;;AAAkC;;;;;;;;sEDOxBA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTzB,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACQI;;AACI;;AACI;;AAAI;;AAAa;;AACjB;;AAAI;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAyB;;AAAY;;AAAS;;AAC1D;;AAAI;;AAAuC;;AAAO;;AAAS;;AAC3D;;AAAI;;AAAQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAuB;;AAAM;;AAAS;;AACtD;;AACJ;;;;;;AALY;;AAAA;;AAEQ;;AAAA;;;;;;AAMxB;;AACI;;AAAI;;AAAyB;;AAC7B;;AAAI;;AAA6B;;AACjC;;AAAI;;AAA+B;;AACvC;;;;;;AAHQ;;AAAA,uGAAAZ,EAAA;;AACA;;AAAA;;AACA;;AAAA,0GAAAK,KAAA;;;;QDXK+B,mB;;;AAMX,mCAAoBlC,aAApB,EAAiD;AAAA;;AAA7B,aAAAA,aAAA,GAAAA,aAAA;AAElB,aAAKmC,MAAL;AACD;;;;iCACK;AAAA;;AACJ,eAAKC,cAAL,GAAoB,IAApB;AACA,eAAKpC,aAAL,CAAmBqC,aAAnB,GAAmC/B,SAAnC,CACE,UAAAgC,IAAI;AAAA,mBAAE,MAAI,CAACC,UAAL,GAAgBD,IAAlB;AAAA,WADN,EAEE,UAAAE,KAAK;AAAA,mBAAE,MAAI,CAACC,YAAL,GAAkBD,KAApB;AAAA,WAFP;AAGD;;;iCACQE,C,EAAQ;AACf,eAAKN,cAAL,GAAoBM,CAApB;AACD;;;gCAEMA,C,EAAU;AAAA;;AACf,eAAKN,cAAL,GAAoBM,CAApB;AACA,eAAK1C,aAAL,CAAmB2C,YAAnB,CAAgC,KAAKP,cAAL,CAAoBtC,EAApD,EAAwDQ,SAAxD,CAAkE,YAAM;AACtE,kBAAI,CAAC6B,MAAL;AACD,WAFD;AAGD;;;mCAIU,CACV;;;;;;;uBA9BUD,mB,EAAmB,8H;AAAA,K;;;YAAnBA,mB;AAAmB,qC;AAAA,e;AAAA,a;AAAA,qF;AAAA;AAAA;ACVhC;;AAAI;;AAAQ;;AAIZ;;AAEA;;AACI;;AAAO;;AAAI;;AAAI;;AAAK;;AACpB;;AAQJ;;AAEA;;AAMA;;AAEA;;;;AAlBW;;AAAA;;AAUP;;AAAA;;AAMJ;;AAAA;;;;;;;;;sEDdaA,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACT1B,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;AEVhC;AAAA;;;AAAA;AAAA;AAAA;;QAAakC,M,GACT,gBAAmB1C,IAAnB,EAAuCC,KAAvC,EAA4DL,EAA5D,EAAsE;AAAA;;AAAnD,WAAAI,IAAA,GAAAA,IAAA;AAAoB,WAAAC,KAAA,GAAAA,KAAA;AAAqB,WAAAL,EAAA,GAAAA,EAAA;AAE3D,K;;;;;;;;;;;;;;;;;ACHL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAM+C,MAAM,GAAC,kCAAb;;QAKaC,a;;;AACX,6BAAoBC,IAApB,EAAqC;AAAA;;AAAjB,aAAAA,IAAA,GAAAA,IAAA;AAAoB;;;;wCAEzB;AACX,iBAAO,KAAKA,IAAL,CAAUC,GAAV,CAAwBH,MAAxB,CAAP;AACD;;;qCAEY/C,E,EAAE;AACb,iBAAO,KAAKiD,IAAL,CAAUC,GAAV,WAAyBH,MAAzB,cAAmC/C,EAAnC,EAAP;AACD;;;kCAESmD,S,EAAgB;AACxB,iBAAO,KAAKF,IAAL,CAAUG,IAAV,CAAuBL,MAAvB,EAA+BI,SAA/B,EAA0CE,WAA1C,CAAP;AACD;;;qCAEYrD,E,EAAE;AACb,iBAAO,KAAKiD,IAAL,CAAUK,MAAV,WAAoBP,MAApB,cAA8B/C,EAA9B,EAAP;AACD;;;qCAEYiC,M,EAAa;AACxB,iBAAO,KAAKgB,IAAL,CAAUM,GAAV,WAAyBR,MAAzB,cAAmCd,MAAM,CAACjC,EAA1C,GAAgDiC,MAAhD,EAAwDoB,WAAxD,CAAP;AACD;;;;;;;uBArBQL,a,EAAa,uH;AAAA,K;;;aAAbA,a;AAAa,eAAbA,aAAa,K;AAAA,kBAFZ;;;;;sEAEDA,a,EAAa;cAHzB,wDAGyB;eAHd;AACVQ,oBAAU,EAAE;AADF,S;AAGc,Q;;;;;;;AAuB1B,QAAMH,WAAW,GAAE;AACjBI,aAAO,EAAE,IAAI,gEAAJ,CAAgB;AACzB,wBAAgB;AADS,OAAhB;AADQ,KAAnB;;;;;;;;;;;;;;;;AClCA;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMC,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,EACGC,KADH,CACS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACrB,KAAR,CAAcoB,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\nimport {ServerService} from '../server.service';\nimport {Person} from '../person';\nimport {Router} from '@angular/router';\n//import {PeoplelistComponent} from '../peoplelist/peoplelist.component';\n\n@Component({\n  selector: 'app-addperson',\n  templateUrl: './addperson.component.html',\n  styleUrls: ['./addperson.component.css']\n})\nexport class AddpersonComponent implements OnInit {\n\n  constructor(private serverService:ServerService, private router:Router) { }\n    addPerson(name:string, email:string) {\n      let np = new Person(name, email);\n      this.serverService.addPerson(np).subscribe(() => {\n      //this.serverService.addPerson(np).subscribe((createdperson:Person) => {\n        //console.dir(createdperson);\n        this.router.navigateByUrl(\"/people\");\n      })\n    }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h3>Lisää henkilö</h3>\n<hr/>\n<table>\n    <thead><th>Nimi</th><th>s-posti</th></thead>\n    <tr><td><input #name/></td><td><input #email/></td></tr>\n    <tr><td colspan=\"2\"><button (click)='addPerson(name.value, email.value)'>Lisää</button></td></tr>\n</table>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {PeoplelistComponent} from './peoplelist/peoplelist.component';\nimport {NotYetComponent} from './not-yet/not-yet.component';\nimport {AddpersonComponent } from './addperson/addperson.component';\nimport {EditpersonComponent} from './editperson/editperson.component';\n\nconst routes: Routes = [{\n  path: '',\n  redirectTo: '/people',\n  pathMatch: 'full'\n },\n {\n  path: 'people',\n  component: PeoplelistComponent\n },\n {\n  path: 'form',\n  component: AddpersonComponent\n },\n {\n  path: 'edit/:id',\n  component: EditpersonComponent\n  },\n {\n  path: '**',\n  component: NotYetComponent\n }\n ];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ang-simple-people';\n}\n","<h1>Henkilötiedot</h1>\n\n<a routerLink='/people' routerLinkActive=\"link-active\"><button>Henkilöt</button></a>\n<a routerLink='/form' routerLinkActive=\"link-active\"><button>Lomake</button></a>\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms';\n\nimport { PeoplelistComponent } from './peoplelist/peoplelist.component';\nimport { NotYetComponent } from './not-yet/not-yet.component';\nimport { ServerService } from './server.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AddpersonComponent } from './addperson/addperson.component';\nimport { EditpersonComponent } from './editperson/editperson.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PeoplelistComponent,\n    NotYetComponent,\n    AddpersonComponent,\n    EditpersonComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [ServerService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport {ServerService} from '../server.service';\nimport {Person} from '../person';\n\n@Component({\n  selector: 'app-editperson',\n  templateUrl: './editperson.component.html',\n  styleUrls: ['./editperson.component.css']\n})\nexport class EditpersonComponent implements OnInit {\n  person: Person;\n  personid: string;\n  constructor(private router: Router, private activatedRoute: ActivatedRoute,\n    private ss: ServerService) { }\n\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe(params => {\n      this.personid = params['id'];\n      this.ss.getOnePerson(this.personid).subscribe((person: Person) => {\n        this.person = person;\n      })\n    })\n  }\n\n  update():void{\n    this.ss.updatePerson(this.person).subscribe(person=>{\n      this.router.navigateByUrl(\"/\");\n    })\n  }\n}\n","\n<h3>Muokkaa henkilön tietoja</h3>\n<p>Henkilön Id: {{personid}}</p>\n<hr/>\n<div *ngIf=person>\n    <table>\n        <thead>\n            <td>Nimi</td><td>s-posti</td>\n        </thead>\n        <tr><td><input type=\"text\" placeholder=\"Nimi\" [(ngModel)]=person.name></td>\n            <td><input type=\"text\" placeholder=\"s-posti\" [(ngModel)]=person.email></td>\n        </tr>\n        <tr>\n            <td colspan=\"2\"><button (click)=update()>Tallenna muutos</button></td>\n        </tr>\n    </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-yet',\n  templateUrl: './not-yet.component.html',\n  styleUrls: ['./not-yet.component.css']\n})\nexport class NotYetComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>tästä osoitteesta ei löydy mitään!</p>\n","import { Component, OnInit } from '@angular/core';\nimport {ServerService} from '../server.service';\nimport {Person} from '../person';\n\n\n@Component({\n  selector: 'app-peoplelist',\n  templateUrl: './peoplelist.component.html',\n  styleUrls: ['./peoplelist.component.css']\n})\nexport class PeoplelistComponent implements OnInit {\n  peoplelist: Person[];\n  selectedPerson:Person;\n  errorMessage:string;\n\n\n  constructor(private serverService:ServerService) { \n\n    this.update();\n  }\n  update(){\n    this.selectedPerson=null;\n    this.serverService.getPersonRest().subscribe(\n      data=>this.peoplelist=data,\n      error=>this.errorMessage=error);\n  }\n  onSelect(p:Person){\n    this.selectedPerson=p;\n  }\n\n  delete(p:Person) {\n    this.selectedPerson=p;\n    this.serverService.deletePerson(this.selectedPerson.id).subscribe(() => {\n      this.update()\n    })\n  }\n   \n    \n\n  ngOnInit() {\n  }\n}\n","<h3>Henkilöt</h3>\n\n<!-- <app-addperson></app-addperson> -->\n\n<hr/>\n\n<table>\n    <thead><th>nimi</th></thead>\n    <tbody *ngFor=\"let item of peoplelist\">\n        <tr>\n            <td>{{item.name}}</td>\n            <td><button (click)=\"onSelect(item)\">Näytä tiedot</button></td>\n            <td><button routerLink=\"/edit/{{item.id}}\">Muokkaa</button></td>\n            <td><button (click)=\"delete(item)\">Poista</button></td>\n        </tr>\n    </tbody>\n</table>\n\n<ul *ngIf=\"selectedPerson\">\n    <li>id: {{selectedPerson.id}}</li>\n    <li>nimi: {{selectedPerson.name}}</li>\n    <li>email: {{selectedPerson.email}}</li>\n</ul>\n\n{{errorMessage}}\n\n<hr/>\n\n\n\n<!-- voi tehdä myös let selectedPerson of peoplelist\n        {{selectedPerson.id}}...\n    \n    PeoplelistComponent:issa määritelty-->\n\n\n<!-- <ul *ngFor=\"let item of peoplelist\">\n    <li>{{item.id}}, {{item.name}}, {{item.email}} </li>\n</ul> -->","export class Person {\r\n    constructor(public name:string, public email:string, public id?:string ){\r\n        \r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable} from 'rxjs';\nimport { map} from 'rxjs/operators';\nimport { Person } from './person';\n\nconst apiUrl=\"http://localhost:3000/api/people\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServerService {\n  constructor(private http:HttpClient) { }\n\n    getPersonRest():Observable<Person[]>{\n      return this.http.get<Person[]>(apiUrl)\n    }\n\n    getOnePerson(id):Observable<Person>{\n      return this.http.get<Person>(`${apiUrl}/${id}`)\n    }\n\n    addPerson(newperson:Person):Observable<Person>{\n      return this.http.post<Person>(apiUrl, newperson, HttpOptions);\n    }\n\n    deletePerson(id):Observable<{}>{\n      return this.http.delete(`${apiUrl}/${id}`)\n    }\n\n    updatePerson(person:Person):Observable<Person>{\n      return this.http.put<Person>(`${apiUrl}/${person.id}`, person, HttpOptions);\n    }\n}\nconst HttpOptions= {\n  headers: new HttpHeaders({\n  'Content-Type': 'application/json'\n  })\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}